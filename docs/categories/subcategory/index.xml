<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>subcategory on 甲羅を背負ったLinux</title>
    <link>https://kshrcb.github.io/categories/subcategory/</link>
    <description>Recent content in subcategory on 甲羅を背負ったLinux</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 26 Mar 2022 09:57:40 +0900</lastBuildDate><atom:link href="https://kshrcb.github.io/categories/subcategory/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>docker-composeでgolangのコンテナ構築</title>
      <link>https://kshrcb.github.io/page/docker-compose%E3%81%A7golang%E3%81%AE%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E6%A7%8B%E7%AF%89/</link>
      <pubDate>Sat, 26 Mar 2022 09:57:40 +0900</pubDate>
      
      <guid>https://kshrcb.github.io/page/docker-compose%E3%81%A7golang%E3%81%AE%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E6%A7%8B%E7%AF%89/</guid>
      <description>docker-composeでgolangの実行環境コンテナを構築する この記事では、golangの実行環境のコンテナを構築する方法を紹介します。
docker-composeコマンドを使うことで、迅速な構築が可能です。
FROM golang:1.15.2-alpine RUN apk update &amp;amp;&amp;amp; apk add git RUN mkdir /go/src/app WORKDIR /go/src/app ADD . /go/src/app version: &amp;#34;3&amp;#34; services:  app:  build: .   tty: true  volumes:  - ./app:/go/src/app  以上です！</description>
    </item>
    
  </channel>
</rss>
